(ns portkey.cloudformation.kinesis
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [portkey.cloudformation]))

(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.kinesis/stream
  [___15594__auto__]
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation.kinesis/shard-count]
   :opt
   [:portkey.cloudformation.kinesis/name
    :portkey.cloudformation.kinesis/retention-period-hours
    :portkey.cloudformation.kinesis/stream-encryption
    :portkey.cloudformation.kinesis/tags]))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kinesis/name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.kinesis/retention-period-hours
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.kinesis/shard-count
  clojure.core/integer?))
(do
 (clojure.spec.alpha/def
  :portkey.cloudformation.kinesis/encryption-type
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.kinesis/key-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.kinesis/stream-encryption
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation.kinesis/encryption-type
    :portkey.cloudformation.kinesis/key-id]
   :opt
   [])))
