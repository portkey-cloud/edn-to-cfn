(ns portkey.cloudformation.kms
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [portkey.cloudformation]))

(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.kms/key
  [___19567__auto__]
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation/id
    :portkey.cloudformation/type
    :portkey.cloudformation.kms/key-policy]
   :opt
   [:portkey.cloudformation.kms/description
    :portkey.cloudformation.kms/enable-key-rotation
    :portkey.cloudformation.kms/enabled
    :portkey.cloudformation.kms/key-usage
    :portkey.cloudformation.kms/tags]))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/description
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/enable-key-rotation
  (portkey.cloudformation/ref-or-spec clojure.core/boolean?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/enabled
  (portkey.cloudformation/ref-or-spec clojure.core/boolean?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/key-policy
  (portkey.cloudformation/ref-or-spec clojure.core/any?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/key-usage
  (portkey.cloudformation/ref-or-spec clojure.core/string?)))
(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.kms/alias
  [___19567__auto__]
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation/id
    :portkey.cloudformation/type
    :portkey.cloudformation.kms/alias-name
    :portkey.cloudformation.kms/target-key-id]
   :opt
   []))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/alias-name
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.kms/target-key-id
  (portkey.cloudformation/ref-or-spec clojure.core/string?)))
