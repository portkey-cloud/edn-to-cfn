(ns portkey.cloudformation.cloud-watch
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [portkey.cloudformation]))

(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.cloud-watch/alarm
  [___19567__auto__]
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation/id
    :portkey.cloudformation/type
    :portkey.cloudformation.cloud-watch/period
    :portkey.cloudformation.cloud-watch/threshold
    :portkey.cloudformation.cloud-watch/comparison-operator
    :portkey.cloudformation.cloud-watch/namespace
    :portkey.cloudformation.cloud-watch/metric-name
    :portkey.cloudformation.cloud-watch/evaluation-periods]
   :opt
   [:portkey.cloudformation.cloud-watch/unit
    :portkey.cloudformation.cloud-watch/treat-missing-data
    :portkey.cloudformation.cloud-watch/ok-actions
    :portkey.cloudformation.cloud-watch/insufficient-data-actions
    :portkey.cloudformation.cloud-watch/dimensions
    :portkey.cloudformation.cloud-watch/alarm-actions
    :portkey.cloudformation.cloud-watch/evaluate-low-sample-count-percentile
    :portkey.cloudformation.cloud-watch/alarm-description
    :portkey.cloudformation.cloud-watch/alarm-name
    :portkey.cloudformation.cloud-watch/extended-statistic
    :portkey.cloudformation.cloud-watch/statistic
    :portkey.cloudformation.cloud-watch/actions-enabled]))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/unit
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/treat-missing-data
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/period
  (portkey.cloudformation/ref-or-spec clojure.core/integer?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/threshold
  (portkey.cloudformation/ref-or-spec clojure.core/double?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/comparison-operator
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/namespace
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/evaluate-low-sample-count-percentile
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/alarm-description
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/alarm-name
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/extended-statistic
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/metric-name
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/evaluation-periods
  (portkey.cloudformation/ref-or-spec clojure.core/integer?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/statistic
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/actions-enabled
  (portkey.cloudformation/ref-or-spec clojure.core/boolean?)))
(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.cloud-watch/dashboard
  [___19567__auto__]
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation/id
    :portkey.cloudformation/type
    :portkey.cloudformation.cloud-watch/dashboard-body]
   :opt
   [:portkey.cloudformation.cloud-watch/dashboard-name]))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/dashboard-name
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/dashboard-body
  (portkey.cloudformation/ref-or-spec clojure.core/string?)))
(do
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/name
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/value
  (portkey.cloudformation/ref-or-spec clojure.core/string?))
 (clojure.spec.alpha/def
  :portkey.cloudformation.cloud-watch/dimension
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation.cloud-watch/name
    :portkey.cloudformation.cloud-watch/value]
   :opt
   [])))
