(ns portkey.cloudformation.sns
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [portkey.cloudformation]))

(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.sns/topic-policy
  [___15594__auto__]
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation.sns/policy-document
    :portkey.cloudformation.sns/topics]
   :opt
   []))
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/policy-document
  clojure.core/any?))
(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.sns/subscription
  [___15594__auto__]
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:portkey.cloudformation.sns/endpoint
    :portkey.cloudformation.sns/protocol
    :portkey.cloudformation.sns/topic-arn]))
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/endpoint
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/protocol
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/topic-arn
  clojure.core/string?))
(do
 (clojure.core/defmethod
  portkey.cloudformation/resource-type-spec
  :portkey.cloudformation.sns/topic
  [___15594__auto__]
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:portkey.cloudformation.sns/display-name
    :portkey.cloudformation.sns/subscription
    :portkey.cloudformation.sns/topic-name]))
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/display-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/topic-name
  clojure.core/string?))
(do
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/endpoint
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/protocol
  clojure.core/string?)
 (clojure.spec.alpha/def
  :portkey.cloudformation.sns/subscription
  (clojure.spec.alpha/keys
   :req
   [:portkey.cloudformation.sns/endpoint
    :portkey.cloudformation.sns/protocol]
   :opt
   [])))
