(ns aws.iam
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]))

(clojure.spec.alpha/def
 :aws.iam/user
 (clojure.spec.alpha/keys
  :req
  []
  :opt
  [:aws.iam/groups
   :aws.iam/login-profile
   :aws.iam/managed-policy-arns
   :aws.iam/path
   :aws.iam/policies
   :aws.iam/user-name]))
(clojure.spec.alpha/def
 :aws.iam/group
 (clojure.spec.alpha/keys
  :req
  []
  :opt
  [:aws.iam/group-name
   :aws.iam/managed-policy-arns
   :aws.iam/path
   :aws.iam/policies]))
(clojure.spec.alpha/def
 :aws.iam/instance-profile
 (clojure.spec.alpha/keys
  :req
  [:aws.iam/roles]
  :opt
  [:aws.iam/instance-profile-name :aws.iam/path]))
(clojure.spec.alpha/def
 :aws.iam/policy
 (clojure.spec.alpha/keys
  :req
  [:aws.iam/policy-document :aws.iam/policy-name]
  :opt
  [:aws.iam/groups :aws.iam/roles :aws.iam/users]))
(clojure.spec.alpha/def
 :aws.iam/managed-policy
 (clojure.spec.alpha/keys
  :req
  [:aws.iam/policy-document]
  :opt
  [:aws.iam/description
   :aws.iam/groups
   :aws.iam/managed-policy-name
   :aws.iam/path
   :aws.iam/roles
   :aws.iam/users]))
(clojure.spec.alpha/def
 :aws.iam/role
 (clojure.spec.alpha/keys
  :req
  [:aws.iam/assume-role-policy-document]
  :opt
  [:aws.iam/managed-policy-arns
   :aws.iam/path
   :aws.iam/policies
   :aws.iam/role-name]))
(clojure.spec.alpha/def
 :aws.iam/access-key
 (clojure.spec.alpha/keys
  :req
  [:aws.iam/user-name]
  :opt
  [:aws.iam/serial :aws.iam/status]))
(clojure.spec.alpha/def
 :aws.iam/user-to-group-addition
 (clojure.spec.alpha/keys
  :req
  [:aws.iam/group-name :aws.iam/users]
  :opt
  []))
(do
 (clojure.spec.alpha/def :aws.iam/policy-document clojure.core/any?)
 (clojure.spec.alpha/def :aws.iam/policy-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.iam/policy
  (clojure.spec.alpha/keys
   :req
   [:aws.iam/policy-document :aws.iam/policy-name]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.iam/password clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.iam/password-reset-required
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.iam/login-profile
  (clojure.spec.alpha/keys
   :req
   [:aws.iam/password]
   :opt
   [:aws.iam/password-reset-required])))
(do
 (clojure.spec.alpha/def :aws.iam/policy-document clojure.core/any?)
 (clojure.spec.alpha/def :aws.iam/policy-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.iam/policy
  (clojure.spec.alpha/keys
   :req
   [:aws.iam/policy-document :aws.iam/policy-name]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.iam/policy-document clojure.core/any?)
 (clojure.spec.alpha/def :aws.iam/policy-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.iam/policy
  (clojure.spec.alpha/keys
   :req
   [:aws.iam/policy-document :aws.iam/policy-name]
   :opt
   [])))
