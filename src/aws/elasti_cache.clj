(ns aws.elasti-cache
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]))

(clojure.spec.alpha/def
 :aws.elasti-cache/replication-group
 (clojure.spec.alpha/keys
  :req
  [:aws.elasti-cache/replication-group-description]
  :opt
  [:aws.elasti-cache/cache-node-type
   :aws.elasti-cache/cache-subnet-group-name
   :aws.elasti-cache/num-node-groups
   :aws.elasti-cache/auth-token
   :aws.elasti-cache/snapshot-arns
   :aws.elasti-cache/security-group-ids
   :aws.elasti-cache/preferred-maintenance-window
   :aws.elasti-cache/auto-minor-version-upgrade
   :aws.elasti-cache/replicas-per-node-group
   :aws.elasti-cache/tags
   :aws.elasti-cache/preferred-cache-cluster-a-zs
   :aws.elasti-cache/at-rest-encryption-enabled
   :aws.elasti-cache/transit-encryption-enabled
   :aws.elasti-cache/primary-cluster-id
   :aws.elasti-cache/engine-version
   :aws.elasti-cache/notification-topic-arn
   :aws.elasti-cache/port
   :aws.elasti-cache/snapshot-window
   :aws.elasti-cache/node-group-configuration
   :aws.elasti-cache/snapshotting-cluster-id
   :aws.elasti-cache/replication-group-id
   :aws.elasti-cache/cache-parameter-group-name
   :aws.elasti-cache/snapshot-retention-limit
   :aws.elasti-cache/automatic-failover-enabled
   :aws.elasti-cache/num-cache-clusters
   :aws.elasti-cache/engine
   :aws.elasti-cache/cache-security-group-names
   :aws.elasti-cache/snapshot-name]))
(clojure.spec.alpha/def
 :aws.elasti-cache/cache-cluster
 (clojure.spec.alpha/keys
  :req
  [:aws.elasti-cache/cache-node-type
   :aws.elasti-cache/num-cache-nodes
   :aws.elasti-cache/engine]
  :opt
  [:aws.elasti-cache/cache-subnet-group-name
   :aws.elasti-cache/az-mode
   :aws.elasti-cache/preferred-availability-zone
   :aws.elasti-cache/snapshot-arns
   :aws.elasti-cache/preferred-maintenance-window
   :aws.elasti-cache/preferred-availability-zones
   :aws.elasti-cache/auto-minor-version-upgrade
   :aws.elasti-cache/tags
   :aws.elasti-cache/vpc-security-group-ids
   :aws.elasti-cache/engine-version
   :aws.elasti-cache/notification-topic-arn
   :aws.elasti-cache/port
   :aws.elasti-cache/snapshot-window
   :aws.elasti-cache/cache-parameter-group-name
   :aws.elasti-cache/snapshot-retention-limit
   :aws.elasti-cache/cluster-name
   :aws.elasti-cache/cache-security-group-names
   :aws.elasti-cache/snapshot-name]))
(clojure.spec.alpha/def
 :aws.elasti-cache/parameter-group
 (clojure.spec.alpha/keys
  :req
  [:aws.elasti-cache/cache-parameter-group-family
   :aws.elasti-cache/description]
  :opt
  [:aws.elasti-cache/properties]))
(clojure.spec.alpha/def
 :aws.elasti-cache/subnet-group
 (clojure.spec.alpha/keys
  :req
  [:aws.elasti-cache/description :aws.elasti-cache/subnet-ids]
  :opt
  [:aws.elasti-cache/cache-subnet-group-name]))
(clojure.spec.alpha/def
 :aws.elasti-cache/security-group-ingress
 (clojure.spec.alpha/keys
  :req
  [:aws.elasti-cache/cache-security-group-name
   :aws.elasti-cache/ec2-security-group-name]
  :opt
  [:aws.elasti-cache/ec2-security-group-owner-id]))
(clojure.spec.alpha/def
 :aws.elasti-cache/security-group
 (clojure.spec.alpha/keys :req [:aws.elasti-cache/description] :opt []))
(do
 (clojure.spec.alpha/def
  :aws.elasti-cache/primary-availability-zone
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.elasti-cache/replica-count
  clojure.core/integer?)
 (clojure.spec.alpha/def :aws.elasti-cache/slots clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.elasti-cache/node-group-configuration
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.elasti-cache/primary-availability-zone
    :aws.elasti-cache/replica-availability-zones
    :aws.elasti-cache/replica-count
    :aws.elasti-cache/slots])))
