(ns aws.kinesis-firehose
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]))

(clojure.spec.alpha/def
 :aws.kinesis-firehose/delivery-stream
 (clojure.spec.alpha/keys
  :req
  []
  :opt
  [:aws.kinesis-firehose/delivery-stream-name
   :aws.kinesis-firehose/delivery-stream-type
   :aws.kinesis-firehose/elasticsearch-destination-configuration
   :aws.kinesis-firehose/extended-s3-destination-configuration
   :aws.kinesis-firehose/kinesis-stream-source-configuration
   :aws.kinesis-firehose/redshift-destination-configuration
   :aws.kinesis-firehose/s3-destination-configuration]))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/prefix
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/role-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/compression-format
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/s3-backup-mode
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/bucket-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/extended-s3-destination-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/prefix
    :aws.kinesis-firehose/role-arn
    :aws.kinesis-firehose/buffering-hints
    :aws.kinesis-firehose/compression-format
    :aws.kinesis-firehose/bucket-arn]
   :opt
   [:aws.kinesis-firehose/encryption-configuration
    :aws.kinesis-firehose/cloud-watch-logging-options
    :aws.kinesis-firehose/s3-backup-mode
    :aws.kinesis-firehose/processing-configuration
    :aws.kinesis-firehose/s3-backup-configuration])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/interval-in-seconds
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/size-in-m-bs
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/buffering-hints
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/interval-in-seconds
    :aws.kinesis-firehose/size-in-m-bs]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/copy-options
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/data-table-columns
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/data-table-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/copy-command
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/data-table-name]
   :opt
   [:aws.kinesis-firehose/copy-options
    :aws.kinesis-firehose/data-table-columns])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/enabled
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/processing-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/enabled :aws.kinesis-firehose/processors]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/enabled
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/log-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/log-stream-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/cloud-watch-logging-options
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.kinesis-firehose/enabled
    :aws.kinesis-firehose/log-group-name
    :aws.kinesis-firehose/log-stream-name])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/bucket-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/compression-format
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/prefix
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/role-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/s3-destination-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/bucket-arn
    :aws.kinesis-firehose/buffering-hints
    :aws.kinesis-firehose/compression-format
    :aws.kinesis-firehose/role-arn]
   :opt
   [:aws.kinesis-firehose/cloud-watch-logging-options
    :aws.kinesis-firehose/encryption-configuration
    :aws.kinesis-firehose/prefix])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/parameter-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/parameter-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/processor-parameter
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/parameter-name
    :aws.kinesis-firehose/parameter-value]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/interval-in-seconds
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/size-in-m-bs
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/elasticsearch-buffering-hints
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/interval-in-seconds
    :aws.kinesis-firehose/size-in-m-bs]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/role-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/index-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/type-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/index-rotation-period
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/s3-backup-mode
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/domain-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/elasticsearch-destination-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/role-arn
    :aws.kinesis-firehose/index-name
    :aws.kinesis-firehose/buffering-hints
    :aws.kinesis-firehose/s3-configuration
    :aws.kinesis-firehose/type-name
    :aws.kinesis-firehose/index-rotation-period
    :aws.kinesis-firehose/retry-options
    :aws.kinesis-firehose/s3-backup-mode
    :aws.kinesis-firehose/domain-arn]
   :opt
   [:aws.kinesis-firehose/cloud-watch-logging-options
    :aws.kinesis-firehose/processing-configuration])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/kinesis-stream-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/role-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/kinesis-stream-source-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/kinesis-stream-arn
    :aws.kinesis-firehose/role-arn]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/duration-in-seconds
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/elasticsearch-retry-options
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/duration-in-seconds]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/type
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/processor
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/parameters :aws.kinesis-firehose/type]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/awskms-key-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/kms-encryption-config
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/awskms-key-arn]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/cluster-jdbcurl
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/password
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/role-arn
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/username
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/redshift-destination-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.kinesis-firehose/cluster-jdbcurl
    :aws.kinesis-firehose/copy-command
    :aws.kinesis-firehose/password
    :aws.kinesis-firehose/role-arn
    :aws.kinesis-firehose/s3-configuration
    :aws.kinesis-firehose/username]
   :opt
   [:aws.kinesis-firehose/cloud-watch-logging-options
    :aws.kinesis-firehose/processing-configuration])))
(do
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/no-encryption-config
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.kinesis-firehose/encryption-configuration
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.kinesis-firehose/kms-encryption-config
    :aws.kinesis-firehose/no-encryption-config])))
