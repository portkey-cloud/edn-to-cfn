(ns aws.data-pipeline
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]))

(clojure.spec.alpha/def
 :aws.data-pipeline/pipeline
 (clojure.spec.alpha/keys
  :req
  [:aws.data-pipeline/name :aws.data-pipeline/parameter-objects]
  :opt
  [:aws.data-pipeline/activate
   :aws.data-pipeline/description
   :aws.data-pipeline/parameter-values
   :aws.data-pipeline/pipeline-objects
   :aws.data-pipeline/pipeline-tags]))
(do
 (clojure.spec.alpha/def :aws.data-pipeline/id clojure.core/string?)
 (clojure.spec.alpha/def :aws.data-pipeline/name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/pipeline-object
  (clojure.spec.alpha/keys
   :req
   [:aws.data-pipeline/fields
    :aws.data-pipeline/id
    :aws.data-pipeline/name]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.data-pipeline/key clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/string-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/parameter-attribute
  (clojure.spec.alpha/keys
   :req
   [:aws.data-pipeline/key :aws.data-pipeline/string-value]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.data-pipeline/key clojure.core/string?)
 (clojure.spec.alpha/def :aws.data-pipeline/value clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/pipeline-tag
  (clojure.spec.alpha/keys
   :req
   [:aws.data-pipeline/key :aws.data-pipeline/value]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.data-pipeline/id clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/string-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/parameter-value
  (clojure.spec.alpha/keys
   :req
   [:aws.data-pipeline/id :aws.data-pipeline/string-value]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.data-pipeline/id clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/parameter-object
  (clojure.spec.alpha/keys
   :req
   [:aws.data-pipeline/attributes :aws.data-pipeline/id]
   :opt
   [])))
(do
 (clojure.spec.alpha/def :aws.data-pipeline/key clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/ref-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/string-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.data-pipeline/field
  (clojure.spec.alpha/keys
   :req
   [:aws.data-pipeline/key]
   :opt
   [:aws.data-pipeline/ref-value :aws.data-pipeline/string-value])))
