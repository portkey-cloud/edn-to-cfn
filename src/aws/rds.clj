(ns aws.rds
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [edn-to-cfn.specs.cfn :as cfn-specs]))

(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/event-subscription
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/sns-topic-arn]
   :opt
   [:aws.rds/enabled
    :aws.rds/event-categories
    :aws.rds/source-ids
    :aws.rds/source-type]))
 (clojure.spec.alpha/def :aws.rds/enabled clojure.core/boolean?)
 (clojure.spec.alpha/def :aws.rds/sns-topic-arn clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/source-type clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-instance
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/db-instance-class]
   :opt
   [:aws.rds/backup-retention-period
    :aws.rds/option-group-name
    :aws.rds/db-security-groups
    :aws.rds/character-set-name
    :aws.rds/publicly-accessible
    :aws.rds/source-region
    :aws.rds/domain-iam-role-name
    :aws.rds/preferred-maintenance-window
    :aws.rds/copy-tags-to-snapshot
    :aws.rds/db-instance-identifier
    :aws.rds/auto-minor-version-upgrade
    :aws.rds/tags
    :aws.rds/db-name
    :aws.rds/vpc-security-groups
    :aws.rds/availability-zone
    :aws.rds/master-user-password
    :aws.rds/license-model
    :aws.rds/domain
    :aws.rds/allow-major-version-upgrade
    :aws.rds/allocated-storage
    :aws.rds/source-db-instance-identifier
    :aws.rds/monitoring-interval
    :aws.rds/timezone
    :aws.rds/master-username
    :aws.rds/engine-version
    :aws.rds/db-snapshot-identifier
    :aws.rds/storage-encrypted
    :aws.rds/db-subnet-group-name
    :aws.rds/port
    :aws.rds/kms-key-id
    :aws.rds/iops
    :aws.rds/storage-type
    :aws.rds/engine
    :aws.rds/db-parameter-group-name
    :aws.rds/monitoring-role-arn
    :aws.rds/multi-az
    :aws.rds/db-cluster-identifier
    :aws.rds/preferred-backup-window]))
 (clojure.spec.alpha/def
  :aws.rds/backup-retention-period
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/option-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/character-set-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/publicly-accessible
  clojure.core/boolean?)
 (clojure.spec.alpha/def :aws.rds/source-region clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/domain-iam-role-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/preferred-maintenance-window
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/copy-tags-to-snapshot
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.rds/db-instance-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/auto-minor-version-upgrade
  clojure.core/boolean?)
 (clojure.spec.alpha/def :aws.rds/db-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/availability-zone
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/master-user-password
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/license-model clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/domain clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/allow-major-version-upgrade
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.rds/allocated-storage
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/source-db-instance-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/monitoring-interval
  clojure.core/integer?)
 (clojure.spec.alpha/def :aws.rds/timezone clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/master-username clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/engine-version clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-snapshot-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/storage-encrypted
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.rds/db-subnet-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/port clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/kms-key-id clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/iops clojure.core/integer?)
 (clojure.spec.alpha/def :aws.rds/storage-type clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-instance-class
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/engine clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-parameter-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/monitoring-role-arn
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/multi-az clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.rds/db-cluster-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/preferred-backup-window
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-security-group-ingress
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/db-security-group-name]
   :opt
   [:aws.rds/cidrip
    :aws.rds/ec2-security-group-id
    :aws.rds/ec2-security-group-name
    :aws.rds/ec2-security-group-owner-id]))
 (clojure.spec.alpha/def :aws.rds/cidrip clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-security-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ec2-security-group-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ec2-security-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ec2-security-group-owner-id
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-security-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/db-security-group-ingress :aws.rds/group-description]
   :opt
   [:aws.rds/ec2-vpc-id :aws.rds/tags]))
 (clojure.spec.alpha/def :aws.rds/ec2-vpc-id clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/group-description
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-subnet-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/db-subnet-group-description :aws.rds/subnet-ids]
   :opt
   [:aws.rds/db-subnet-group-name :aws.rds/tags]))
 (clojure.spec.alpha/def
  :aws.rds/db-subnet-group-description
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-subnet-group-name
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/option-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/engine-name
    :aws.rds/major-engine-version
    :aws.rds/option-configurations
    :aws.rds/option-group-description]
   :opt
   [:aws.rds/tags]))
 (clojure.spec.alpha/def :aws.rds/engine-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/major-engine-version
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/option-group-description
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-cluster-parameter-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/description :aws.rds/family :aws.rds/parameters]
   :opt
   [:aws.rds/tags]))
 (clojure.spec.alpha/def :aws.rds/description clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/family clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/parameters clojure.core/any?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-parameter-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/description :aws.rds/family]
   :opt
   [:aws.rds/parameters :aws.rds/tags]))
 (clojure.spec.alpha/def :aws.rds/description clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/family clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.rds/db-cluster
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/engine]
   :opt
   [:aws.rds/snapshot-identifier
    :aws.rds/backup-retention-period
    :aws.rds/replication-source-identifier
    :aws.rds/database-name
    :aws.rds/preferred-maintenance-window
    :aws.rds/tags
    :aws.rds/vpc-security-group-ids
    :aws.rds/db-cluster-parameter-group-name
    :aws.rds/master-user-password
    :aws.rds/master-username
    :aws.rds/engine-version
    :aws.rds/storage-encrypted
    :aws.rds/db-subnet-group-name
    :aws.rds/port
    :aws.rds/kms-key-id
    :aws.rds/availability-zones
    :aws.rds/db-cluster-identifier
    :aws.rds/preferred-backup-window]))
 (clojure.spec.alpha/def
  :aws.rds/snapshot-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/backup-retention-period
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.rds/replication-source-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/database-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/preferred-maintenance-window
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-cluster-parameter-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/master-user-password
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/master-username clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/engine-version clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/storage-encrypted
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.rds/db-subnet-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/port clojure.core/integer?)
 (clojure.spec.alpha/def :aws.rds/kms-key-id clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/engine clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/db-cluster-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/preferred-backup-window
  clojure.core/string?))
(do
 (clojure.spec.alpha/def :aws.rds/cidrip clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ec2-security-group-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ec2-security-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ec2-security-group-owner-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/ingress
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.rds/cidrip
    :aws.rds/ec2-security-group-id
    :aws.rds/ec2-security-group-name
    :aws.rds/ec2-security-group-owner-id])))
(do
 (clojure.spec.alpha/def :aws.rds/option-name clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/option-version clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/port clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.rds/option-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.rds/option-name]
   :opt
   [:aws.rds/db-security-group-memberships
    :aws.rds/option-settings
    :aws.rds/option-version
    :aws.rds/port
    :aws.rds/vpc-security-group-memberships])))
(do
 (clojure.spec.alpha/def :aws.rds/name clojure.core/string?)
 (clojure.spec.alpha/def :aws.rds/value clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.rds/option-setting
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.rds/name :aws.rds/value])))
