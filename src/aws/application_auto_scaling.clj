(ns aws.application-auto-scaling
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]))

(clojure.spec.alpha/def
 :aws.application-auto-scaling/scalable-target
 (clojure.spec.alpha/keys
  :req
  [:aws.application-auto-scaling/max-capacity
   :aws.application-auto-scaling/min-capacity
   :aws.application-auto-scaling/resource-id
   :aws.application-auto-scaling/role-arn
   :aws.application-auto-scaling/scalable-dimension
   :aws.application-auto-scaling/service-namespace]
  :opt
  [:aws.application-auto-scaling/scheduled-actions]))
(clojure.spec.alpha/def
 :aws.application-auto-scaling/scaling-policy
 (clojure.spec.alpha/keys
  :req
  [:aws.application-auto-scaling/policy-name
   :aws.application-auto-scaling/policy-type]
  :opt
  [:aws.application-auto-scaling/resource-id
   :aws.application-auto-scaling/scalable-dimension
   :aws.application-auto-scaling/scaling-target-id
   :aws.application-auto-scaling/service-namespace
   :aws.application-auto-scaling/step-scaling-policy-configuration
   :aws.application-auto-scaling/target-tracking-scaling-policy-configuration]))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/adjustment-type
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/cooldown
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/metric-aggregation-type
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/min-adjustment-magnitude
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/step-scaling-policy-configuration
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.application-auto-scaling/adjustment-type
    :aws.application-auto-scaling/cooldown
    :aws.application-auto-scaling/metric-aggregation-type
    :aws.application-auto-scaling/min-adjustment-magnitude
    :aws.application-auto-scaling/step-adjustments])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/metric-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/namespace
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/statistic
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/unit
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/customized-metric-specification
  (clojure.spec.alpha/keys
   :req
   [:aws.application-auto-scaling/metric-name
    :aws.application-auto-scaling/namespace
    :aws.application-auto-scaling/statistic]
   :opt
   [:aws.application-auto-scaling/dimensions
    :aws.application-auto-scaling/unit])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/metric-interval-lower-bound
  clojure.core/double?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/metric-interval-upper-bound
  clojure.core/double?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/scaling-adjustment
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/step-adjustment
  (clojure.spec.alpha/keys
   :req
   [:aws.application-auto-scaling/scaling-adjustment]
   :opt
   [:aws.application-auto-scaling/metric-interval-lower-bound
    :aws.application-auto-scaling/metric-interval-upper-bound])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/end-time
  clojure.core/inst?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/schedule
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/scheduled-action-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/start-time
  clojure.core/inst?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/scheduled-action
  (clojure.spec.alpha/keys
   :req
   [:aws.application-auto-scaling/schedule
    :aws.application-auto-scaling/scheduled-action-name]
   :opt
   [:aws.application-auto-scaling/end-time
    :aws.application-auto-scaling/scalable-target-action
    :aws.application-auto-scaling/start-time])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/predefined-metric-type
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/resource-label
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/predefined-metric-specification
  (clojure.spec.alpha/keys
   :req
   [:aws.application-auto-scaling/predefined-metric-type]
   :opt
   [:aws.application-auto-scaling/resource-label])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/max-capacity
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/min-capacity
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/scalable-target-action
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.application-auto-scaling/max-capacity
    :aws.application-auto-scaling/min-capacity])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/disable-scale-in
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/scale-in-cooldown
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/scale-out-cooldown
  clojure.core/integer?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/target-value
  clojure.core/double?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/target-tracking-scaling-policy-configuration
  (clojure.spec.alpha/keys
   :req
   [:aws.application-auto-scaling/target-value]
   :opt
   [:aws.application-auto-scaling/customized-metric-specification
    :aws.application-auto-scaling/disable-scale-in
    :aws.application-auto-scaling/predefined-metric-specification
    :aws.application-auto-scaling/scale-in-cooldown
    :aws.application-auto-scaling/scale-out-cooldown])))
(do
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.application-auto-scaling/metric-dimension
  (clojure.spec.alpha/keys
   :req
   [:aws.application-auto-scaling/name
    :aws.application-auto-scaling/value]
   :opt
   [])))
