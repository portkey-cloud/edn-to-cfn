(ns aws.directory-service
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [edn-to-cfn.specs.cfn :as cfn-specs]))

(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.directory-service/microsoft-ad
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.directory-service/name
    :aws.directory-service/password
    :aws.directory-service/vpc-settings]
   :opt
   [:aws.directory-service/create-alias
    :aws.directory-service/enable-sso
    :aws.directory-service/short-name]))
 (clojure.spec.alpha/def
  :aws.directory-service/create-alias
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.directory-service/enable-sso
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.directory-service/name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/password
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/short-name
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.directory-service/simple-ad
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.directory-service/name
    :aws.directory-service/password
    :aws.directory-service/size
    :aws.directory-service/vpc-settings]
   :opt
   [:aws.directory-service/create-alias
    :aws.directory-service/description
    :aws.directory-service/enable-sso
    :aws.directory-service/short-name]))
 (clojure.spec.alpha/def
  :aws.directory-service/create-alias
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.directory-service/description
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/enable-sso
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.directory-service/name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/password
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/short-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/size
  clojure.core/string?))
(do
 (clojure.spec.alpha/def
  :aws.directory-service/vpc-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/vpc-settings
  (clojure.spec.alpha/keys
   :req
   [:aws.directory-service/subnet-ids :aws.directory-service/vpc-id]
   :opt
   [])))
(do
 (clojure.spec.alpha/def
  :aws.directory-service/vpc-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.directory-service/vpc-settings
  (clojure.spec.alpha/keys
   :req
   [:aws.directory-service/subnet-ids :aws.directory-service/vpc-id]
   :opt
   [])))
