(ns aws.redshift
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [edn-to-cfn.specs.cfn :as cfn-specs]))

(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.redshift/cluster-security-group-ingress
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/cluster-security-group-name]
   :opt
   [:aws.redshift/cidrip
    :aws.redshift/ec2-security-group-name
    :aws.redshift/ec2-security-group-owner-id]))
 (clojure.spec.alpha/def :aws.redshift/cidrip clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/cluster-security-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/ec2-security-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/ec2-security-group-owner-id
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.redshift/cluster-subnet-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/description :aws.redshift/subnet-ids]
   :opt
   [:aws.redshift/tags]))
 (clojure.spec.alpha/def
  :aws.redshift/description
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.redshift/cluster-security-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/description]
   :opt
   [:aws.redshift/tags]))
 (clojure.spec.alpha/def
  :aws.redshift/description
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.redshift/cluster
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/db-name
    :aws.redshift/cluster-type
    :aws.redshift/master-user-password
    :aws.redshift/master-username
    :aws.redshift/node-type]
   :opt
   [:aws.redshift/snapshot-identifier
    :aws.redshift/publicly-accessible
    :aws.redshift/logging-properties
    :aws.redshift/preferred-maintenance-window
    :aws.redshift/encrypted
    :aws.redshift/owner-account
    :aws.redshift/hsm-client-certificate-identifier
    :aws.redshift/cluster-identifier
    :aws.redshift/cluster-subnet-group-name
    :aws.redshift/number-of-nodes
    :aws.redshift/tags
    :aws.redshift/vpc-security-group-ids
    :aws.redshift/availability-zone
    :aws.redshift/cluster-security-groups
    :aws.redshift/elastic-ip
    :aws.redshift/hsm-configuration-identifier
    :aws.redshift/port
    :aws.redshift/kms-key-id
    :aws.redshift/allow-version-upgrade
    :aws.redshift/cluster-version
    :aws.redshift/automated-snapshot-retention-period
    :aws.redshift/iam-roles
    :aws.redshift/snapshot-cluster-identifier
    :aws.redshift/cluster-parameter-group-name]))
 (clojure.spec.alpha/def
  :aws.redshift/snapshot-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/publicly-accessible
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.redshift/preferred-maintenance-window
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.redshift/encrypted clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.redshift/owner-account
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/hsm-client-certificate-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/cluster-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/cluster-subnet-group-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/number-of-nodes
  clojure.core/integer?)
 (clojure.spec.alpha/def :aws.redshift/db-name clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/availability-zone
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/cluster-type
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/master-user-password
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.redshift/elastic-ip clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/master-username
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/hsm-configuration-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.redshift/port clojure.core/integer?)
 (clojure.spec.alpha/def :aws.redshift/kms-key-id clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/allow-version-upgrade
  clojure.core/boolean?)
 (clojure.spec.alpha/def
  :aws.redshift/cluster-version
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/automated-snapshot-retention-period
  clojure.core/integer?)
 (clojure.spec.alpha/def :aws.redshift/node-type clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/snapshot-cluster-identifier
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/cluster-parameter-group-name
  clojure.core/string?))
(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.redshift/cluster-parameter-group
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/description :aws.redshift/parameter-group-family]
   :opt
   [:aws.redshift/parameters :aws.redshift/tags]))
 (clojure.spec.alpha/def
  :aws.redshift/description
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/parameter-group-family
  clojure.core/string?))
(do
 (clojure.spec.alpha/def
  :aws.redshift/bucket-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/s3-key-prefix
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/logging-properties
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/bucket-name]
   :opt
   [:aws.redshift/s3-key-prefix])))
(do
 (clojure.spec.alpha/def
  :aws.redshift/parameter-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/parameter-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/parameter
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/parameter-name :aws.redshift/parameter-value]
   :opt
   [])))
