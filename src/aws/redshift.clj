(ns aws.redshift
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]))

(clojure.spec.alpha/def
 :aws.redshift/cluster-security-group-ingress
 (clojure.spec.alpha/keys
  :req
  [:aws.redshift/cluster-security-group-name]
  :opt
  [:aws.redshift/cidrip
   :aws.redshift/ec2-security-group-name
   :aws.redshift/ec2-security-group-owner-id]))
(clojure.spec.alpha/def
 :aws.redshift/cluster-subnet-group
 (clojure.spec.alpha/keys
  :req
  [:aws.redshift/description :aws.redshift/subnet-ids]
  :opt
  [:aws.redshift/tags]))
(clojure.spec.alpha/def
 :aws.redshift/cluster-security-group
 (clojure.spec.alpha/keys
  :req
  [:aws.redshift/description]
  :opt
  [:aws.redshift/tags]))
(clojure.spec.alpha/def
 :aws.redshift/cluster
 (clojure.spec.alpha/keys
  :req
  [:aws.redshift/db-name
   :aws.redshift/cluster-type
   :aws.redshift/master-user-password
   :aws.redshift/master-username
   :aws.redshift/node-type]
  :opt
  [:aws.redshift/snapshot-identifier
   :aws.redshift/publicly-accessible
   :aws.redshift/logging-properties
   :aws.redshift/preferred-maintenance-window
   :aws.redshift/encrypted
   :aws.redshift/owner-account
   :aws.redshift/hsm-client-certificate-identifier
   :aws.redshift/cluster-identifier
   :aws.redshift/cluster-subnet-group-name
   :aws.redshift/number-of-nodes
   :aws.redshift/tags
   :aws.redshift/vpc-security-group-ids
   :aws.redshift/availability-zone
   :aws.redshift/cluster-security-groups
   :aws.redshift/elastic-ip
   :aws.redshift/hsm-configuration-identifier
   :aws.redshift/port
   :aws.redshift/kms-key-id
   :aws.redshift/allow-version-upgrade
   :aws.redshift/cluster-version
   :aws.redshift/automated-snapshot-retention-period
   :aws.redshift/iam-roles
   :aws.redshift/snapshot-cluster-identifier
   :aws.redshift/cluster-parameter-group-name]))
(clojure.spec.alpha/def
 :aws.redshift/cluster-parameter-group
 (clojure.spec.alpha/keys
  :req
  [:aws.redshift/description :aws.redshift/parameter-group-family]
  :opt
  [:aws.redshift/parameters :aws.redshift/tags]))
(do
 (clojure.spec.alpha/def
  :aws.redshift/bucket-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/s3-key-prefix
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/logging-properties
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/bucket-name]
   :opt
   [:aws.redshift/s3-key-prefix])))
(do
 (clojure.spec.alpha/def
  :aws.redshift/parameter-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/parameter-value
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.redshift/parameter
  (clojure.spec.alpha/keys
   :req
   [:aws.redshift/parameter-name :aws.redshift/parameter-value]
   :opt
   [])))
