(ns aws.service-catalog
  "AUTOGENERATED clojure.spec definitions"
  (:require [clojure.spec.alpha]
            [edn-to-cfn.specs.cfn :as cfn-specs]))

(do
 (clojure.core/defmethod
  cfn-specs/resource-type-spec
  :aws.service-catalog/cloud-formation-provisioned-product
  [___16342__auto__]
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.service-catalog/provisioned-product-name
    :aws.service-catalog/provisioning-artifact-name
    :aws.service-catalog/path-id
    :aws.service-catalog/tags
    :aws.service-catalog/provisioning-parameters
    :aws.service-catalog/accept-language
    :aws.service-catalog/notification-arns
    :aws.service-catalog/product-name
    :aws.service-catalog/provisioning-artifact-id
    :aws.service-catalog/product-id]))
 (clojure.spec.alpha/def
  :aws.service-catalog/provisioned-product-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/provisioning-artifact-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/path-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/accept-language
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/product-name
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/provisioning-artifact-id
  clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/product-id
  clojure.core/string?))
(do
 (clojure.spec.alpha/def
  :aws.service-catalog/value
  clojure.core/string?)
 (clojure.spec.alpha/def :aws.service-catalog/key clojure.core/string?)
 (clojure.spec.alpha/def
  :aws.service-catalog/provisioning-parameter
  (clojure.spec.alpha/keys
   :req
   []
   :opt
   [:aws.service-catalog/value :aws.service-catalog/key])))
